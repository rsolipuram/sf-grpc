// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/pubsub_api.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Eventbus.V1 {

  /// <summary>Holder for reflection information generated from Protos/pubsub_api.proto</summary>
  public static partial class PubsubApiReflection {

    #region Descriptor
    /// <summary>File descriptor for Protos/pubsub_api.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PubsubApiReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChdQcm90b3MvcHVic3ViX2FwaS5wcm90bxILZXZlbnRidXMudjEigwEKCVRv",
            "cGljSW5mbxISCgp0b3BpY19uYW1lGAEgASgJEhMKC3RlbmFudF9ndWlkGAIg",
            "ASgJEhMKC2Nhbl9wdWJsaXNoGAMgASgIEhUKDWNhbl9zdWJzY3JpYmUYBCAB",
            "KAgSEQoJc2NoZW1hX2lkGAUgASgJEg4KBnJwY19pZBgGIAEoCSIiCgxUb3Bp",
            "Y1JlcXVlc3QSEgoKdG9waWNfbmFtZRgBIAEoCSIpCgtFdmVudEhlYWRlchIL",
            "CgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAwiagoNUHJvZHVjZXJFdmVudBIK",
            "CgJpZBgBIAEoCRIRCglzY2hlbWFfaWQYAiABKAkSDwoHcGF5bG9hZBgDIAEo",
            "DBIpCgdoZWFkZXJzGAQgAygLMhguZXZlbnRidXMudjEuRXZlbnRIZWFkZXIi",
            "TQoNQ29uc3VtZXJFdmVudBIpCgVldmVudBgBIAEoCzIaLmV2ZW50YnVzLnYx",
            "LlByb2R1Y2VyRXZlbnQSEQoJcmVwbGF5X2lkGAIgASgMIl0KDVB1Ymxpc2hS",
            "ZXN1bHQSEQoJcmVwbGF5X2lkGAEgASgMEiEKBWVycm9yGAIgASgLMhIuZXZl",
            "bnRidXMudjEuRXJyb3ISFgoOY29ycmVsYXRpb25LZXkYAyABKAkiOgoFRXJy",
            "b3ISJAoEY29kZRgBIAEoDjIWLmV2ZW50YnVzLnYxLkVycm9yQ29kZRILCgNt",
            "c2cYAiABKAkilAEKDEZldGNoUmVxdWVzdBISCgp0b3BpY19uYW1lGAEgASgJ",
            "EjAKDXJlcGxheV9wcmVzZXQYAiABKA4yGS5ldmVudGJ1cy52MS5SZXBsYXlQ",
            "cmVzZXQSEQoJcmVwbGF5X2lkGAMgASgMEhUKDW51bV9yZXF1ZXN0ZWQYBCAB",
            "KAUSFAoMYXV0aF9yZWZyZXNoGAUgASgJIoQBCg1GZXRjaFJlc3BvbnNlEioK",
            "BmV2ZW50cxgBIAMoCzIaLmV2ZW50YnVzLnYxLkNvbnN1bWVyRXZlbnQSGAoQ",
            "bGF0ZXN0X3JlcGxheV9pZBgCIAEoDBIOCgZycGNfaWQYAyABKAkSHQoVcGVu",
            "ZGluZ19udW1fcmVxdWVzdGVkGAQgASgFIiIKDVNjaGVtYVJlcXVlc3QSEQoJ",
            "c2NoZW1hX2lkGAEgASgJIkQKClNjaGVtYUluZm8SEwoLc2NoZW1hX2pzb24Y",
            "ASABKAkSEQoJc2NoZW1hX2lkGAIgASgJEg4KBnJwY19pZBgDIAEoCSJmCg5Q",
            "dWJsaXNoUmVxdWVzdBISCgp0b3BpY19uYW1lGAEgASgJEioKBmV2ZW50cxgC",
            "IAMoCzIaLmV2ZW50YnVzLnYxLlByb2R1Y2VyRXZlbnQSFAoMYXV0aF9yZWZy",
            "ZXNoGAMgASgJImEKD1B1Ymxpc2hSZXNwb25zZRIrCgdyZXN1bHRzGAEgAygL",
            "MhouZXZlbnRidXMudjEuUHVibGlzaFJlc3VsdBIRCglzY2hlbWFfaWQYAiAB",
            "KAkSDgoGcnBjX2lkGAMgASgJKiUKCUVycm9yQ29kZRILCgdVTktOT1dOEAAS",
            "CwoHUFVCTElTSBABKjQKDFJlcGxheVByZXNldBIKCgZMQVRFU1QQABIMCghF",
            "QVJMSUVTVBABEgoKBkNVU1RPTRACMucCCgZQdWJTdWISRgoJU3Vic2NyaWJl",
            "EhkuZXZlbnRidXMudjEuRmV0Y2hSZXF1ZXN0GhouZXZlbnRidXMudjEuRmV0",
            "Y2hSZXNwb25zZSgBMAESQAoJR2V0U2NoZW1hEhouZXZlbnRidXMudjEuU2No",
            "ZW1hUmVxdWVzdBoXLmV2ZW50YnVzLnYxLlNjaGVtYUluZm8SPQoIR2V0VG9w",
            "aWMSGS5ldmVudGJ1cy52MS5Ub3BpY1JlcXVlc3QaFi5ldmVudGJ1cy52MS5U",
            "b3BpY0luZm8SRAoHUHVibGlzaBIbLmV2ZW50YnVzLnYxLlB1Ymxpc2hSZXF1",
            "ZXN0GhwuZXZlbnRidXMudjEuUHVibGlzaFJlc3BvbnNlEk4KDVB1Ymxpc2hT",
            "dHJlYW0SGy5ldmVudGJ1cy52MS5QdWJsaXNoUmVxdWVzdBocLmV2ZW50YnVz",
            "LnYxLlB1Ymxpc2hSZXNwb25zZSgBMAFCYQogY29tLnNhbGVzZm9yY2UuZXZl",
            "bnRidXMucHJvdG9idWZCC1B1YlN1YlByb3RvUAFaLmdpdGh1Yi5jb20vZGV2",
            "ZWxvcGVyZm9yY2UvcHViLXN1Yi1hcGkvZ28vcHJvdG9iBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Eventbus.V1.ErrorCode), typeof(global::Eventbus.V1.ReplayPreset), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Eventbus.V1.TopicInfo), global::Eventbus.V1.TopicInfo.Parser, new[]{ "TopicName", "TenantGuid", "CanPublish", "CanSubscribe", "SchemaId", "RpcId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Eventbus.V1.TopicRequest), global::Eventbus.V1.TopicRequest.Parser, new[]{ "TopicName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Eventbus.V1.EventHeader), global::Eventbus.V1.EventHeader.Parser, new[]{ "Key", "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Eventbus.V1.ProducerEvent), global::Eventbus.V1.ProducerEvent.Parser, new[]{ "Id", "SchemaId", "Payload", "Headers" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Eventbus.V1.ConsumerEvent), global::Eventbus.V1.ConsumerEvent.Parser, new[]{ "Event", "ReplayId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Eventbus.V1.PublishResult), global::Eventbus.V1.PublishResult.Parser, new[]{ "ReplayId", "Error", "CorrelationKey" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Eventbus.V1.Error), global::Eventbus.V1.Error.Parser, new[]{ "Code", "Msg" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Eventbus.V1.FetchRequest), global::Eventbus.V1.FetchRequest.Parser, new[]{ "TopicName", "ReplayPreset", "ReplayId", "NumRequested", "AuthRefresh" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Eventbus.V1.FetchResponse), global::Eventbus.V1.FetchResponse.Parser, new[]{ "Events", "LatestReplayId", "RpcId", "PendingNumRequested" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Eventbus.V1.SchemaRequest), global::Eventbus.V1.SchemaRequest.Parser, new[]{ "SchemaId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Eventbus.V1.SchemaInfo), global::Eventbus.V1.SchemaInfo.Parser, new[]{ "SchemaJson", "SchemaId", "RpcId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Eventbus.V1.PublishRequest), global::Eventbus.V1.PublishRequest.Parser, new[]{ "TopicName", "Events", "AuthRefresh" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Eventbus.V1.PublishResponse), global::Eventbus.V1.PublishResponse.Parser, new[]{ "Results", "SchemaId", "RpcId" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// Supported error codes
  /// </summary>
  public enum ErrorCode {
    [pbr::OriginalName("UNKNOWN")] Unknown = 0,
    [pbr::OriginalName("PUBLISH")] Publish = 1,
  }

  /// <summary>
  ///
  /// Supported subscription replay start values.
  /// By default, the subscription will start at the tip of the stream if ReplayPreset is not specified.
  /// </summary>
  public enum ReplayPreset {
    /// <summary>
    /// Start the subscription at the tip of the stream.
    /// </summary>
    [pbr::OriginalName("LATEST")] Latest = 0,
    /// <summary>
    /// Start the subscription at the earliest point in the stream.
    /// </summary>
    [pbr::OriginalName("EARLIEST")] Earliest = 1,
    /// <summary>
    /// Start the subscription after a custom point in the stream. This must be set with a valid replay_id in the FetchRequest.
    /// </summary>
    [pbr::OriginalName("CUSTOM")] Custom = 2,
  }

  #endregion

  #region Messages
  /// <summary>
  ///
  /// Contains information about a topic and uniquely identifies it. TopicInfo is returned by the GetTopic RPC method.
  /// </summary>
  public sealed partial class TopicInfo : pb::IMessage<TopicInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TopicInfo> _parser = new pb::MessageParser<TopicInfo>(() => new TopicInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TopicInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Eventbus.V1.PubsubApiReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TopicInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TopicInfo(TopicInfo other) : this() {
      topicName_ = other.topicName_;
      tenantGuid_ = other.tenantGuid_;
      canPublish_ = other.canPublish_;
      canSubscribe_ = other.canSubscribe_;
      schemaId_ = other.schemaId_;
      rpcId_ = other.rpcId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TopicInfo Clone() {
      return new TopicInfo(this);
    }

    /// <summary>Field number for the "topic_name" field.</summary>
    public const int TopicNameFieldNumber = 1;
    private string topicName_ = "";
    /// <summary>
    /// Topic name
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TopicName {
      get { return topicName_; }
      set {
        topicName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tenant_guid" field.</summary>
    public const int TenantGuidFieldNumber = 2;
    private string tenantGuid_ = "";
    /// <summary>
    /// Tenant/org GUID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TenantGuid {
      get { return tenantGuid_; }
      set {
        tenantGuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "can_publish" field.</summary>
    public const int CanPublishFieldNumber = 3;
    private bool canPublish_;
    /// <summary>
    /// Is publishing allowed?
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool CanPublish {
      get { return canPublish_; }
      set {
        canPublish_ = value;
      }
    }

    /// <summary>Field number for the "can_subscribe" field.</summary>
    public const int CanSubscribeFieldNumber = 4;
    private bool canSubscribe_;
    /// <summary>
    /// Is subscription allowed?
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool CanSubscribe {
      get { return canSubscribe_; }
      set {
        canSubscribe_ = value;
      }
    }

    /// <summary>Field number for the "schema_id" field.</summary>
    public const int SchemaIdFieldNumber = 5;
    private string schemaId_ = "";
    /// <summary>
    /// ID of the current topic schema, which can be used for
    /// publishing of generically serialized events.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SchemaId {
      get { return schemaId_; }
      set {
        schemaId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "rpc_id" field.</summary>
    public const int RpcIdFieldNumber = 6;
    private string rpcId_ = "";
    /// <summary>
    /// RPC ID used to trace errors.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RpcId {
      get { return rpcId_; }
      set {
        rpcId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TopicInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TopicInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TopicName != other.TopicName) return false;
      if (TenantGuid != other.TenantGuid) return false;
      if (CanPublish != other.CanPublish) return false;
      if (CanSubscribe != other.CanSubscribe) return false;
      if (SchemaId != other.SchemaId) return false;
      if (RpcId != other.RpcId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (TopicName.Length != 0) hash ^= TopicName.GetHashCode();
      if (TenantGuid.Length != 0) hash ^= TenantGuid.GetHashCode();
      if (CanPublish != false) hash ^= CanPublish.GetHashCode();
      if (CanSubscribe != false) hash ^= CanSubscribe.GetHashCode();
      if (SchemaId.Length != 0) hash ^= SchemaId.GetHashCode();
      if (RpcId.Length != 0) hash ^= RpcId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TopicName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TopicName);
      }
      if (TenantGuid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TenantGuid);
      }
      if (CanPublish != false) {
        output.WriteRawTag(24);
        output.WriteBool(CanPublish);
      }
      if (CanSubscribe != false) {
        output.WriteRawTag(32);
        output.WriteBool(CanSubscribe);
      }
      if (SchemaId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(SchemaId);
      }
      if (RpcId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(RpcId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TopicName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TopicName);
      }
      if (TenantGuid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TenantGuid);
      }
      if (CanPublish != false) {
        output.WriteRawTag(24);
        output.WriteBool(CanPublish);
      }
      if (CanSubscribe != false) {
        output.WriteRawTag(32);
        output.WriteBool(CanSubscribe);
      }
      if (SchemaId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(SchemaId);
      }
      if (RpcId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(RpcId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (TopicName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TopicName);
      }
      if (TenantGuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TenantGuid);
      }
      if (CanPublish != false) {
        size += 1 + 1;
      }
      if (CanSubscribe != false) {
        size += 1 + 1;
      }
      if (SchemaId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SchemaId);
      }
      if (RpcId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RpcId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TopicInfo other) {
      if (other == null) {
        return;
      }
      if (other.TopicName.Length != 0) {
        TopicName = other.TopicName;
      }
      if (other.TenantGuid.Length != 0) {
        TenantGuid = other.TenantGuid;
      }
      if (other.CanPublish != false) {
        CanPublish = other.CanPublish;
      }
      if (other.CanSubscribe != false) {
        CanSubscribe = other.CanSubscribe;
      }
      if (other.SchemaId.Length != 0) {
        SchemaId = other.SchemaId;
      }
      if (other.RpcId.Length != 0) {
        RpcId = other.RpcId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TopicName = input.ReadString();
            break;
          }
          case 18: {
            TenantGuid = input.ReadString();
            break;
          }
          case 24: {
            CanPublish = input.ReadBool();
            break;
          }
          case 32: {
            CanSubscribe = input.ReadBool();
            break;
          }
          case 42: {
            SchemaId = input.ReadString();
            break;
          }
          case 50: {
            RpcId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            TopicName = input.ReadString();
            break;
          }
          case 18: {
            TenantGuid = input.ReadString();
            break;
          }
          case 24: {
            CanPublish = input.ReadBool();
            break;
          }
          case 32: {
            CanSubscribe = input.ReadBool();
            break;
          }
          case 42: {
            SchemaId = input.ReadString();
            break;
          }
          case 50: {
            RpcId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  /// A request message for GetTopic. Note that the tenant/org is not directly referenced
  /// in the request, but is implicitly identified by the authentication headers.
  /// </summary>
  public sealed partial class TopicRequest : pb::IMessage<TopicRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TopicRequest> _parser = new pb::MessageParser<TopicRequest>(() => new TopicRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TopicRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Eventbus.V1.PubsubApiReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TopicRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TopicRequest(TopicRequest other) : this() {
      topicName_ = other.topicName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TopicRequest Clone() {
      return new TopicRequest(this);
    }

    /// <summary>Field number for the "topic_name" field.</summary>
    public const int TopicNameFieldNumber = 1;
    private string topicName_ = "";
    /// <summary>
    /// The name of the topic to retrieve.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TopicName {
      get { return topicName_; }
      set {
        topicName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TopicRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TopicRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TopicName != other.TopicName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (TopicName.Length != 0) hash ^= TopicName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TopicName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TopicName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TopicName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TopicName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (TopicName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TopicName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TopicRequest other) {
      if (other == null) {
        return;
      }
      if (other.TopicName.Length != 0) {
        TopicName = other.TopicName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TopicName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            TopicName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  /// Reserved for future use.
  /// Header that contains information for distributed tracing, filtering, routing, etc.
  /// For example, X-B3-* headers assigned by a publisher are stored with the event and
  /// can provide a full distributed trace of the event across its entire lifecycle.
  /// </summary>
  public sealed partial class EventHeader : pb::IMessage<EventHeader>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventHeader> _parser = new pb::MessageParser<EventHeader>(() => new EventHeader());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<EventHeader> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Eventbus.V1.PubsubApiReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EventHeader() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EventHeader(EventHeader other) : this() {
      key_ = other.key_;
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EventHeader Clone() {
      return new EventHeader(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private string key_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private pb::ByteString value_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as EventHeader);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(EventHeader other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
      }
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(EventHeader other) {
      if (other == null) {
        return;
      }
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
          case 18: {
            Value = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
          case 18: {
            Value = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  /// Represents an event that an event publishing app creates.
  /// </summary>
  public sealed partial class ProducerEvent : pb::IMessage<ProducerEvent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProducerEvent> _parser = new pb::MessageParser<ProducerEvent>(() => new ProducerEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ProducerEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Eventbus.V1.PubsubApiReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProducerEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProducerEvent(ProducerEvent other) : this() {
      id_ = other.id_;
      schemaId_ = other.schemaId_;
      payload_ = other.payload_;
      headers_ = other.headers_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProducerEvent Clone() {
      return new ProducerEvent(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    /// Either a user-provided ID or a system generated guid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "schema_id" field.</summary>
    public const int SchemaIdFieldNumber = 2;
    private string schemaId_ = "";
    /// <summary>
    /// Schema fingerprint for this event which is hash of the schema
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SchemaId {
      get { return schemaId_; }
      set {
        schemaId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "payload" field.</summary>
    public const int PayloadFieldNumber = 3;
    private pb::ByteString payload_ = pb::ByteString.Empty;
    /// <summary>
    /// The message data field
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Payload {
      get { return payload_; }
      set {
        payload_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "headers" field.</summary>
    public const int HeadersFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Eventbus.V1.EventHeader> _repeated_headers_codec
        = pb::FieldCodec.ForMessage(34, global::Eventbus.V1.EventHeader.Parser);
    private readonly pbc::RepeatedField<global::Eventbus.V1.EventHeader> headers_ = new pbc::RepeatedField<global::Eventbus.V1.EventHeader>();
    /// <summary>
    /// Reserved for future use. Key-value pairs of headers.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Eventbus.V1.EventHeader> Headers {
      get { return headers_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ProducerEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ProducerEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (SchemaId != other.SchemaId) return false;
      if (Payload != other.Payload) return false;
      if(!headers_.Equals(other.headers_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (SchemaId.Length != 0) hash ^= SchemaId.GetHashCode();
      if (Payload.Length != 0) hash ^= Payload.GetHashCode();
      hash ^= headers_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (SchemaId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SchemaId);
      }
      if (Payload.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Payload);
      }
      headers_.WriteTo(output, _repeated_headers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (SchemaId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SchemaId);
      }
      if (Payload.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Payload);
      }
      headers_.WriteTo(ref output, _repeated_headers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (SchemaId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SchemaId);
      }
      if (Payload.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Payload);
      }
      size += headers_.CalculateSize(_repeated_headers_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ProducerEvent other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.SchemaId.Length != 0) {
        SchemaId = other.SchemaId;
      }
      if (other.Payload.Length != 0) {
        Payload = other.Payload;
      }
      headers_.Add(other.headers_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            SchemaId = input.ReadString();
            break;
          }
          case 26: {
            Payload = input.ReadBytes();
            break;
          }
          case 34: {
            headers_.AddEntriesFrom(input, _repeated_headers_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            SchemaId = input.ReadString();
            break;
          }
          case 26: {
            Payload = input.ReadBytes();
            break;
          }
          case 34: {
            headers_.AddEntriesFrom(ref input, _repeated_headers_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  /// Represents an event that is consumed in a subscriber client.
  /// In addition to the fields in ProducerEvent, ConsumerEvent has the replay_id field.
  /// </summary>
  public sealed partial class ConsumerEvent : pb::IMessage<ConsumerEvent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ConsumerEvent> _parser = new pb::MessageParser<ConsumerEvent>(() => new ConsumerEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ConsumerEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Eventbus.V1.PubsubApiReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ConsumerEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ConsumerEvent(ConsumerEvent other) : this() {
      event_ = other.event_ != null ? other.event_.Clone() : null;
      replayId_ = other.replayId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ConsumerEvent Clone() {
      return new ConsumerEvent(this);
    }

    /// <summary>Field number for the "event" field.</summary>
    public const int EventFieldNumber = 1;
    private global::Eventbus.V1.ProducerEvent event_;
    /// <summary>
    /// The event with fields identical to ProducerEvent
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Eventbus.V1.ProducerEvent Event {
      get { return event_; }
      set {
        event_ = value;
      }
    }

    /// <summary>Field number for the "replay_id" field.</summary>
    public const int ReplayIdFieldNumber = 2;
    private pb::ByteString replayId_ = pb::ByteString.Empty;
    /// <summary>
    /// The replay ID of the event.
    /// A subscriber app can store the replay ID. When the app restarts, it can resume subscription
    /// starting from events in the event bus after the event with that replay ID.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString ReplayId {
      get { return replayId_; }
      set {
        replayId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ConsumerEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ConsumerEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Event, other.Event)) return false;
      if (ReplayId != other.ReplayId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (event_ != null) hash ^= Event.GetHashCode();
      if (ReplayId.Length != 0) hash ^= ReplayId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (event_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Event);
      }
      if (ReplayId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(ReplayId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (event_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Event);
      }
      if (ReplayId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(ReplayId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (event_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Event);
      }
      if (ReplayId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ReplayId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ConsumerEvent other) {
      if (other == null) {
        return;
      }
      if (other.event_ != null) {
        if (event_ == null) {
          Event = new global::Eventbus.V1.ProducerEvent();
        }
        Event.MergeFrom(other.Event);
      }
      if (other.ReplayId.Length != 0) {
        ReplayId = other.ReplayId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (event_ == null) {
              Event = new global::Eventbus.V1.ProducerEvent();
            }
            input.ReadMessage(Event);
            break;
          }
          case 18: {
            ReplayId = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (event_ == null) {
              Event = new global::Eventbus.V1.ProducerEvent();
            }
            input.ReadMessage(Event);
            break;
          }
          case 18: {
            ReplayId = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  /// Event publish result that the Publish RPC method returns. The result contains replay_id or a publish error.
  /// </summary>
  public sealed partial class PublishResult : pb::IMessage<PublishResult>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PublishResult> _parser = new pb::MessageParser<PublishResult>(() => new PublishResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PublishResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Eventbus.V1.PubsubApiReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PublishResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PublishResult(PublishResult other) : this() {
      replayId_ = other.replayId_;
      error_ = other.error_ != null ? other.error_.Clone() : null;
      correlationKey_ = other.correlationKey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PublishResult Clone() {
      return new PublishResult(this);
    }

    /// <summary>Field number for the "replay_id" field.</summary>
    public const int ReplayIdFieldNumber = 1;
    private pb::ByteString replayId_ = pb::ByteString.Empty;
    /// <summary>
    /// Replay ID of the event
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString ReplayId {
      get { return replayId_; }
      set {
        replayId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 2;
    private global::Eventbus.V1.Error error_;
    /// <summary>
    /// Publish error if any
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Eventbus.V1.Error Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    /// <summary>Field number for the "correlationKey" field.</summary>
    public const int CorrelationKeyFieldNumber = 3;
    private string correlationKey_ = "";
    /// <summary>
    /// Correlation key of the ProducerEvent
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CorrelationKey {
      get { return correlationKey_; }
      set {
        correlationKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PublishResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PublishResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ReplayId != other.ReplayId) return false;
      if (!object.Equals(Error, other.Error)) return false;
      if (CorrelationKey != other.CorrelationKey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ReplayId.Length != 0) hash ^= ReplayId.GetHashCode();
      if (error_ != null) hash ^= Error.GetHashCode();
      if (CorrelationKey.Length != 0) hash ^= CorrelationKey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ReplayId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(ReplayId);
      }
      if (error_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Error);
      }
      if (CorrelationKey.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CorrelationKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ReplayId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(ReplayId);
      }
      if (error_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Error);
      }
      if (CorrelationKey.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CorrelationKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ReplayId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ReplayId);
      }
      if (error_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (CorrelationKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CorrelationKey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PublishResult other) {
      if (other == null) {
        return;
      }
      if (other.ReplayId.Length != 0) {
        ReplayId = other.ReplayId;
      }
      if (other.error_ != null) {
        if (error_ == null) {
          Error = new global::Eventbus.V1.Error();
        }
        Error.MergeFrom(other.Error);
      }
      if (other.CorrelationKey.Length != 0) {
        CorrelationKey = other.CorrelationKey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ReplayId = input.ReadBytes();
            break;
          }
          case 18: {
            if (error_ == null) {
              Error = new global::Eventbus.V1.Error();
            }
            input.ReadMessage(Error);
            break;
          }
          case 26: {
            CorrelationKey = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ReplayId = input.ReadBytes();
            break;
          }
          case 18: {
            if (error_ == null) {
              Error = new global::Eventbus.V1.Error();
            }
            input.ReadMessage(Error);
            break;
          }
          case 26: {
            CorrelationKey = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Contains error information for an error that an RPC method returns.
  /// </summary>
  public sealed partial class Error : pb::IMessage<Error>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Error> _parser = new pb::MessageParser<Error>(() => new Error());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Error> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Eventbus.V1.PubsubApiReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Error() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Error(Error other) : this() {
      code_ = other.code_;
      msg_ = other.msg_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Error Clone() {
      return new Error(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private global::Eventbus.V1.ErrorCode code_ = global::Eventbus.V1.ErrorCode.Unknown;
    /// <summary>
    /// Error code
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Eventbus.V1.ErrorCode Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "msg" field.</summary>
    public const int MsgFieldNumber = 2;
    private string msg_ = "";
    /// <summary>
    /// Error message
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Msg {
      get { return msg_; }
      set {
        msg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Error);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Error other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Msg != other.Msg) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != global::Eventbus.V1.ErrorCode.Unknown) hash ^= Code.GetHashCode();
      if (Msg.Length != 0) hash ^= Msg.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Code != global::Eventbus.V1.ErrorCode.Unknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
      if (Msg.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Msg);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Code != global::Eventbus.V1.ErrorCode.Unknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
      if (Msg.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Msg);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Code != global::Eventbus.V1.ErrorCode.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Code);
      }
      if (Msg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Msg);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Error other) {
      if (other == null) {
        return;
      }
      if (other.Code != global::Eventbus.V1.ErrorCode.Unknown) {
        Code = other.Code;
      }
      if (other.Msg.Length != 0) {
        Msg = other.Msg;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = (global::Eventbus.V1.ErrorCode) input.ReadEnum();
            break;
          }
          case 18: {
            Msg = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = (global::Eventbus.V1.ErrorCode) input.ReadEnum();
            break;
          }
          case 18: {
            Msg = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  /// Request for the Subscribe streaming RPC method. This request is used to:
  /// 1. Establish the initial subscribe stream.
  /// 2. Request more events from the subscription stream.
  /// Flow Control is handled by the subscriber via num_requested.
  /// A client can specify a starting point for the subscription with replay_preset and replay_id combinations.
  /// If no replay_preset is specified, the subscription starts at LATEST (tip of the stream).
  /// replay_preset and replay_id values are only consumed as part of the first FetchRequest. If
  /// a client needs to start at another point in the stream, it must start a new subscription.
  /// </summary>
  public sealed partial class FetchRequest : pb::IMessage<FetchRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FetchRequest> _parser = new pb::MessageParser<FetchRequest>(() => new FetchRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FetchRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Eventbus.V1.PubsubApiReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FetchRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FetchRequest(FetchRequest other) : this() {
      topicName_ = other.topicName_;
      replayPreset_ = other.replayPreset_;
      replayId_ = other.replayId_;
      numRequested_ = other.numRequested_;
      authRefresh_ = other.authRefresh_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FetchRequest Clone() {
      return new FetchRequest(this);
    }

    /// <summary>Field number for the "topic_name" field.</summary>
    public const int TopicNameFieldNumber = 1;
    private string topicName_ = "";
    /// <summary>
    ///
    /// Identifies a topic for subscription in the very first FetchRequest of the stream. The topic cannot change
    /// in subsequent FetchRequests within the same subscribe stream, but can be omitted for efficiency.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TopicName {
      get { return topicName_; }
      set {
        topicName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "replay_preset" field.</summary>
    public const int ReplayPresetFieldNumber = 2;
    private global::Eventbus.V1.ReplayPreset replayPreset_ = global::Eventbus.V1.ReplayPreset.Latest;
    /// <summary>
    ///
    /// Subscription starting point. This is consumed only as part of the first FetchRequest
    /// when the subscription is set up.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Eventbus.V1.ReplayPreset ReplayPreset {
      get { return replayPreset_; }
      set {
        replayPreset_ = value;
      }
    }

    /// <summary>Field number for the "replay_id" field.</summary>
    public const int ReplayIdFieldNumber = 3;
    private pb::ByteString replayId_ = pb::ByteString.Empty;
    /// <summary>
    ///
    /// If replay_preset of CUSTOM is selected, specify the subscription point to start after.
    /// This is consumed only as part of the first FetchRequest when the subscription is set up.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString ReplayId {
      get { return replayId_; }
      set {
        replayId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "num_requested" field.</summary>
    public const int NumRequestedFieldNumber = 4;
    private int numRequested_;
    /// <summary>
    ///
    /// Number of events a client is ready to accept. Each subsequent FetchRequest informs the server
    /// of additional processing capacity available on the client side. There is no guarantee of equal number of
    /// FetchResponse messages to be sent back. There is not necessarily a correspondence between
    /// number of requested events in FetchRequest and the number of events returned in subsequent
    /// FetchResponses.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NumRequested {
      get { return numRequested_; }
      set {
        numRequested_ = value;
      }
    }

    /// <summary>Field number for the "auth_refresh" field.</summary>
    public const int AuthRefreshFieldNumber = 5;
    private string authRefresh_ = "";
    /// <summary>
    /// For internal Salesforce use only.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AuthRefresh {
      get { return authRefresh_; }
      set {
        authRefresh_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FetchRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FetchRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TopicName != other.TopicName) return false;
      if (ReplayPreset != other.ReplayPreset) return false;
      if (ReplayId != other.ReplayId) return false;
      if (NumRequested != other.NumRequested) return false;
      if (AuthRefresh != other.AuthRefresh) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (TopicName.Length != 0) hash ^= TopicName.GetHashCode();
      if (ReplayPreset != global::Eventbus.V1.ReplayPreset.Latest) hash ^= ReplayPreset.GetHashCode();
      if (ReplayId.Length != 0) hash ^= ReplayId.GetHashCode();
      if (NumRequested != 0) hash ^= NumRequested.GetHashCode();
      if (AuthRefresh.Length != 0) hash ^= AuthRefresh.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TopicName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TopicName);
      }
      if (ReplayPreset != global::Eventbus.V1.ReplayPreset.Latest) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ReplayPreset);
      }
      if (ReplayId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(ReplayId);
      }
      if (NumRequested != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(NumRequested);
      }
      if (AuthRefresh.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(AuthRefresh);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TopicName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TopicName);
      }
      if (ReplayPreset != global::Eventbus.V1.ReplayPreset.Latest) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ReplayPreset);
      }
      if (ReplayId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(ReplayId);
      }
      if (NumRequested != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(NumRequested);
      }
      if (AuthRefresh.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(AuthRefresh);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (TopicName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TopicName);
      }
      if (ReplayPreset != global::Eventbus.V1.ReplayPreset.Latest) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ReplayPreset);
      }
      if (ReplayId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ReplayId);
      }
      if (NumRequested != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NumRequested);
      }
      if (AuthRefresh.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AuthRefresh);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FetchRequest other) {
      if (other == null) {
        return;
      }
      if (other.TopicName.Length != 0) {
        TopicName = other.TopicName;
      }
      if (other.ReplayPreset != global::Eventbus.V1.ReplayPreset.Latest) {
        ReplayPreset = other.ReplayPreset;
      }
      if (other.ReplayId.Length != 0) {
        ReplayId = other.ReplayId;
      }
      if (other.NumRequested != 0) {
        NumRequested = other.NumRequested;
      }
      if (other.AuthRefresh.Length != 0) {
        AuthRefresh = other.AuthRefresh;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TopicName = input.ReadString();
            break;
          }
          case 16: {
            ReplayPreset = (global::Eventbus.V1.ReplayPreset) input.ReadEnum();
            break;
          }
          case 26: {
            ReplayId = input.ReadBytes();
            break;
          }
          case 32: {
            NumRequested = input.ReadInt32();
            break;
          }
          case 42: {
            AuthRefresh = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            TopicName = input.ReadString();
            break;
          }
          case 16: {
            ReplayPreset = (global::Eventbus.V1.ReplayPreset) input.ReadEnum();
            break;
          }
          case 26: {
            ReplayId = input.ReadBytes();
            break;
          }
          case 32: {
            NumRequested = input.ReadInt32();
            break;
          }
          case 42: {
            AuthRefresh = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  /// Response for the Subscribe streaming RPC method. This returns ConsumerEvent(s).
  /// If there are no events to deliver, the server sends an empty batch fetch response with the latest replay ID. The
  /// empty fetch response is sent within 270 seconds. An empty fetch response provides a periodic keepalive from the
  /// server and the latest replay ID.
  /// </summary>
  public sealed partial class FetchResponse : pb::IMessage<FetchResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FetchResponse> _parser = new pb::MessageParser<FetchResponse>(() => new FetchResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FetchResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Eventbus.V1.PubsubApiReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FetchResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FetchResponse(FetchResponse other) : this() {
      events_ = other.events_.Clone();
      latestReplayId_ = other.latestReplayId_;
      rpcId_ = other.rpcId_;
      pendingNumRequested_ = other.pendingNumRequested_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FetchResponse Clone() {
      return new FetchResponse(this);
    }

    /// <summary>Field number for the "events" field.</summary>
    public const int EventsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Eventbus.V1.ConsumerEvent> _repeated_events_codec
        = pb::FieldCodec.ForMessage(10, global::Eventbus.V1.ConsumerEvent.Parser);
    private readonly pbc::RepeatedField<global::Eventbus.V1.ConsumerEvent> events_ = new pbc::RepeatedField<global::Eventbus.V1.ConsumerEvent>();
    /// <summary>
    /// Received events for subscription for client consumption
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Eventbus.V1.ConsumerEvent> Events {
      get { return events_; }
    }

    /// <summary>Field number for the "latest_replay_id" field.</summary>
    public const int LatestReplayIdFieldNumber = 2;
    private pb::ByteString latestReplayId_ = pb::ByteString.Empty;
    /// <summary>
    /// Latest replay ID of a subscription. Enables clients with an updated replay value so that they can keep track
    /// of their last consumed replay. Clients will not have to start a subscription at a very old replay in the case where a resubscribe is necessary.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString LatestReplayId {
      get { return latestReplayId_; }
      set {
        latestReplayId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "rpc_id" field.</summary>
    public const int RpcIdFieldNumber = 3;
    private string rpcId_ = "";
    /// <summary>
    /// RPC ID used to trace errors.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RpcId {
      get { return rpcId_; }
      set {
        rpcId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "pending_num_requested" field.</summary>
    public const int PendingNumRequestedFieldNumber = 4;
    private int pendingNumRequested_;
    /// <summary>
    /// Number of remaining events to be delivered to the client for a Subscribe RPC call.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PendingNumRequested {
      get { return pendingNumRequested_; }
      set {
        pendingNumRequested_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FetchResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FetchResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!events_.Equals(other.events_)) return false;
      if (LatestReplayId != other.LatestReplayId) return false;
      if (RpcId != other.RpcId) return false;
      if (PendingNumRequested != other.PendingNumRequested) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= events_.GetHashCode();
      if (LatestReplayId.Length != 0) hash ^= LatestReplayId.GetHashCode();
      if (RpcId.Length != 0) hash ^= RpcId.GetHashCode();
      if (PendingNumRequested != 0) hash ^= PendingNumRequested.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      events_.WriteTo(output, _repeated_events_codec);
      if (LatestReplayId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(LatestReplayId);
      }
      if (RpcId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(RpcId);
      }
      if (PendingNumRequested != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(PendingNumRequested);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      events_.WriteTo(ref output, _repeated_events_codec);
      if (LatestReplayId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(LatestReplayId);
      }
      if (RpcId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(RpcId);
      }
      if (PendingNumRequested != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(PendingNumRequested);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += events_.CalculateSize(_repeated_events_codec);
      if (LatestReplayId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(LatestReplayId);
      }
      if (RpcId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RpcId);
      }
      if (PendingNumRequested != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PendingNumRequested);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FetchResponse other) {
      if (other == null) {
        return;
      }
      events_.Add(other.events_);
      if (other.LatestReplayId.Length != 0) {
        LatestReplayId = other.LatestReplayId;
      }
      if (other.RpcId.Length != 0) {
        RpcId = other.RpcId;
      }
      if (other.PendingNumRequested != 0) {
        PendingNumRequested = other.PendingNumRequested;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            events_.AddEntriesFrom(input, _repeated_events_codec);
            break;
          }
          case 18: {
            LatestReplayId = input.ReadBytes();
            break;
          }
          case 26: {
            RpcId = input.ReadString();
            break;
          }
          case 32: {
            PendingNumRequested = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            events_.AddEntriesFrom(ref input, _repeated_events_codec);
            break;
          }
          case 18: {
            LatestReplayId = input.ReadBytes();
            break;
          }
          case 26: {
            RpcId = input.ReadString();
            break;
          }
          case 32: {
            PendingNumRequested = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  /// Request for the GetSchema RPC method. The schema request is based on the event schema ID.
  /// </summary>
  public sealed partial class SchemaRequest : pb::IMessage<SchemaRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SchemaRequest> _parser = new pb::MessageParser<SchemaRequest>(() => new SchemaRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SchemaRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Eventbus.V1.PubsubApiReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SchemaRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SchemaRequest(SchemaRequest other) : this() {
      schemaId_ = other.schemaId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SchemaRequest Clone() {
      return new SchemaRequest(this);
    }

    /// <summary>Field number for the "schema_id" field.</summary>
    public const int SchemaIdFieldNumber = 1;
    private string schemaId_ = "";
    /// <summary>
    /// Schema fingerprint for this event, which is a hash of the schema.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SchemaId {
      get { return schemaId_; }
      set {
        schemaId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SchemaRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SchemaRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SchemaId != other.SchemaId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (SchemaId.Length != 0) hash ^= SchemaId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SchemaId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SchemaId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SchemaId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SchemaId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (SchemaId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SchemaId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SchemaRequest other) {
      if (other == null) {
        return;
      }
      if (other.SchemaId.Length != 0) {
        SchemaId = other.SchemaId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SchemaId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            SchemaId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  /// Response for the GetSchema RPC method. This returns the schema ID and schema of an event.
  /// </summary>
  public sealed partial class SchemaInfo : pb::IMessage<SchemaInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SchemaInfo> _parser = new pb::MessageParser<SchemaInfo>(() => new SchemaInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SchemaInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Eventbus.V1.PubsubApiReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SchemaInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SchemaInfo(SchemaInfo other) : this() {
      schemaJson_ = other.schemaJson_;
      schemaId_ = other.schemaId_;
      rpcId_ = other.rpcId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SchemaInfo Clone() {
      return new SchemaInfo(this);
    }

    /// <summary>Field number for the "schema_json" field.</summary>
    public const int SchemaJsonFieldNumber = 1;
    private string schemaJson_ = "";
    /// <summary>
    /// Avro schema in JSON format
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SchemaJson {
      get { return schemaJson_; }
      set {
        schemaJson_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "schema_id" field.</summary>
    public const int SchemaIdFieldNumber = 2;
    private string schemaId_ = "";
    /// <summary>
    /// Schema fingerprint
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SchemaId {
      get { return schemaId_; }
      set {
        schemaId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "rpc_id" field.</summary>
    public const int RpcIdFieldNumber = 3;
    private string rpcId_ = "";
    /// <summary>
    /// RPC ID used to trace errors.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RpcId {
      get { return rpcId_; }
      set {
        rpcId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SchemaInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SchemaInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SchemaJson != other.SchemaJson) return false;
      if (SchemaId != other.SchemaId) return false;
      if (RpcId != other.RpcId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (SchemaJson.Length != 0) hash ^= SchemaJson.GetHashCode();
      if (SchemaId.Length != 0) hash ^= SchemaId.GetHashCode();
      if (RpcId.Length != 0) hash ^= RpcId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SchemaJson.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SchemaJson);
      }
      if (SchemaId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SchemaId);
      }
      if (RpcId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(RpcId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SchemaJson.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SchemaJson);
      }
      if (SchemaId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SchemaId);
      }
      if (RpcId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(RpcId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (SchemaJson.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SchemaJson);
      }
      if (SchemaId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SchemaId);
      }
      if (RpcId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RpcId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SchemaInfo other) {
      if (other == null) {
        return;
      }
      if (other.SchemaJson.Length != 0) {
        SchemaJson = other.SchemaJson;
      }
      if (other.SchemaId.Length != 0) {
        SchemaId = other.SchemaId;
      }
      if (other.RpcId.Length != 0) {
        RpcId = other.RpcId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SchemaJson = input.ReadString();
            break;
          }
          case 18: {
            SchemaId = input.ReadString();
            break;
          }
          case 26: {
            RpcId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            SchemaJson = input.ReadString();
            break;
          }
          case 18: {
            SchemaId = input.ReadString();
            break;
          }
          case 26: {
            RpcId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request for the Publish and PublishStream RPC method.
  /// </summary>
  public sealed partial class PublishRequest : pb::IMessage<PublishRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PublishRequest> _parser = new pb::MessageParser<PublishRequest>(() => new PublishRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PublishRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Eventbus.V1.PubsubApiReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PublishRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PublishRequest(PublishRequest other) : this() {
      topicName_ = other.topicName_;
      events_ = other.events_.Clone();
      authRefresh_ = other.authRefresh_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PublishRequest Clone() {
      return new PublishRequest(this);
    }

    /// <summary>Field number for the "topic_name" field.</summary>
    public const int TopicNameFieldNumber = 1;
    private string topicName_ = "";
    /// <summary>
    /// Topic to publish on
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TopicName {
      get { return topicName_; }
      set {
        topicName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "events" field.</summary>
    public const int EventsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Eventbus.V1.ProducerEvent> _repeated_events_codec
        = pb::FieldCodec.ForMessage(18, global::Eventbus.V1.ProducerEvent.Parser);
    private readonly pbc::RepeatedField<global::Eventbus.V1.ProducerEvent> events_ = new pbc::RepeatedField<global::Eventbus.V1.ProducerEvent>();
    /// <summary>
    /// Batch of ProducerEvent(s) to send
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Eventbus.V1.ProducerEvent> Events {
      get { return events_; }
    }

    /// <summary>Field number for the "auth_refresh" field.</summary>
    public const int AuthRefreshFieldNumber = 3;
    private string authRefresh_ = "";
    /// <summary>
    /// For internal Salesforce use only.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AuthRefresh {
      get { return authRefresh_; }
      set {
        authRefresh_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PublishRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PublishRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TopicName != other.TopicName) return false;
      if(!events_.Equals(other.events_)) return false;
      if (AuthRefresh != other.AuthRefresh) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (TopicName.Length != 0) hash ^= TopicName.GetHashCode();
      hash ^= events_.GetHashCode();
      if (AuthRefresh.Length != 0) hash ^= AuthRefresh.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TopicName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TopicName);
      }
      events_.WriteTo(output, _repeated_events_codec);
      if (AuthRefresh.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(AuthRefresh);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TopicName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TopicName);
      }
      events_.WriteTo(ref output, _repeated_events_codec);
      if (AuthRefresh.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(AuthRefresh);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (TopicName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TopicName);
      }
      size += events_.CalculateSize(_repeated_events_codec);
      if (AuthRefresh.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AuthRefresh);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PublishRequest other) {
      if (other == null) {
        return;
      }
      if (other.TopicName.Length != 0) {
        TopicName = other.TopicName;
      }
      events_.Add(other.events_);
      if (other.AuthRefresh.Length != 0) {
        AuthRefresh = other.AuthRefresh;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TopicName = input.ReadString();
            break;
          }
          case 18: {
            events_.AddEntriesFrom(input, _repeated_events_codec);
            break;
          }
          case 26: {
            AuthRefresh = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            TopicName = input.ReadString();
            break;
          }
          case 18: {
            events_.AddEntriesFrom(ref input, _repeated_events_codec);
            break;
          }
          case 26: {
            AuthRefresh = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  /// Response for the Publish and PublishStream RPC methods. This returns
  /// a list of PublishResults for each event that the client attempted to
  /// publish. PublishResult indicates if publish succeeded or not
  /// for each event. It also returns the schema ID that was used to create
  /// the ProducerEvents in the PublishRequest.
  /// </summary>
  public sealed partial class PublishResponse : pb::IMessage<PublishResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PublishResponse> _parser = new pb::MessageParser<PublishResponse>(() => new PublishResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PublishResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Eventbus.V1.PubsubApiReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PublishResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PublishResponse(PublishResponse other) : this() {
      results_ = other.results_.Clone();
      schemaId_ = other.schemaId_;
      rpcId_ = other.rpcId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PublishResponse Clone() {
      return new PublishResponse(this);
    }

    /// <summary>Field number for the "results" field.</summary>
    public const int ResultsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Eventbus.V1.PublishResult> _repeated_results_codec
        = pb::FieldCodec.ForMessage(10, global::Eventbus.V1.PublishResult.Parser);
    private readonly pbc::RepeatedField<global::Eventbus.V1.PublishResult> results_ = new pbc::RepeatedField<global::Eventbus.V1.PublishResult>();
    /// <summary>
    /// Publish results
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Eventbus.V1.PublishResult> Results {
      get { return results_; }
    }

    /// <summary>Field number for the "schema_id" field.</summary>
    public const int SchemaIdFieldNumber = 2;
    private string schemaId_ = "";
    /// <summary>
    /// Schema fingerprint for this event, which is a hash of the schema
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SchemaId {
      get { return schemaId_; }
      set {
        schemaId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "rpc_id" field.</summary>
    public const int RpcIdFieldNumber = 3;
    private string rpcId_ = "";
    /// <summary>
    /// RPC ID used to trace errors.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RpcId {
      get { return rpcId_; }
      set {
        rpcId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PublishResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PublishResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!results_.Equals(other.results_)) return false;
      if (SchemaId != other.SchemaId) return false;
      if (RpcId != other.RpcId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= results_.GetHashCode();
      if (SchemaId.Length != 0) hash ^= SchemaId.GetHashCode();
      if (RpcId.Length != 0) hash ^= RpcId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      results_.WriteTo(output, _repeated_results_codec);
      if (SchemaId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SchemaId);
      }
      if (RpcId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(RpcId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      results_.WriteTo(ref output, _repeated_results_codec);
      if (SchemaId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SchemaId);
      }
      if (RpcId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(RpcId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += results_.CalculateSize(_repeated_results_codec);
      if (SchemaId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SchemaId);
      }
      if (RpcId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RpcId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PublishResponse other) {
      if (other == null) {
        return;
      }
      results_.Add(other.results_);
      if (other.SchemaId.Length != 0) {
        SchemaId = other.SchemaId;
      }
      if (other.RpcId.Length != 0) {
        RpcId = other.RpcId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            results_.AddEntriesFrom(input, _repeated_results_codec);
            break;
          }
          case 18: {
            SchemaId = input.ReadString();
            break;
          }
          case 26: {
            RpcId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            results_.AddEntriesFrom(ref input, _repeated_results_codec);
            break;
          }
          case 18: {
            SchemaId = input.ReadString();
            break;
          }
          case 26: {
            RpcId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
